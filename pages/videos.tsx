import Head from 'next/head'
import { collection, doc, getDoc } from "firebase/firestore";
import {db} from '../services/firebase';
import { useEffect, useRef, useState } from 'react';
import { useRouter } from 'next/router';
import { Loading, NotFound } from '@/components/elements';
import ReactPlayer from 'react-player';

interface VideoPageUI {
  videoUrl: string;
  calendlyUrl: string;
}

export default function VideoPage() {

  const router = useRouter()
  const videoId: string = router.query.id as string;
  const [data, setData] = useState<VideoPageUI | null>(null);
  const [isLoading, setLoading] = useState<boolean>(false);
  
  const fetchData = async () => {
    if (!db || !videoId) return;
    const docRef = doc(db, "gifs", videoId);
    const docSnap = await getDoc(docRef);
    if (docSnap.exists()) {
      
      setData({
        calendlyUrl: docSnap.data().calendlyUrl,
        videoUrl: docSnap.data().url,
      })
    }
    else {
      console.log("No Such Document");
    }
    setLoading(false)
  }

  useEffect(()=>{
    setLoading(true);
    fetchData();
  }, [videoId])

return <>
      <Head>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="stylesheet" href="https://cdn.plyr.io/3.7.8/plyr.css" />
      </Head>
      <main className='flex flex-row justify-between items-center p-6 min-h-screen w-full'>
        {isLoading && 
        <div className='mx-auto'>
          <Loading />
        </div>
        }
        {!isLoading && data && <div className='flex flex-col items-center justify-center w-full h-full relative'>
          <div className='container'>
            <ReactPlayer
              url={data.videoUrl}
              className='react-player'
              width='100%'
              height='100%'
              playing={true}
              wrapper={(props) => {
                return <div className='flex flex-col items-center'>
                <a target="_blank" href={data?.calendlyUrl} className='text-white absolute top-4 cursor-pointer bg-[#3D56B0] shadow-md p-2 rounded-lg bg-opacity-70 z-30'>
              Book on Calendly
            </a>
            {props.children}
                </div>
              }}
            />
          </div>
          
        </div>
        }
        {!isLoading && !data && <div className='mx-auto'>
          <NotFound />
          </div>}
      </main>
    </>
}